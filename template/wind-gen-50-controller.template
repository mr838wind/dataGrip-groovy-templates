package ${ITEMS.CONTROLLER.packageName};

import com.shinsegae.villiv.common.APIResult;
import com.shinsegae.villiv.common.CodeEnums;
import com.shinsegae.villiv.common.annotation.AnnoSearchCode;
import com.shinsegae.villiv.common.annotation.AnnoSearchFileEncV2;
import com.shinsegae.villiv.common.annotation.AnnoSetCommon;
import com.shinsegae.villiv.common.annotation.AnnoSetFileUploadV2;
import com.shinsegae.villiv.common.user.AnnoUser;
import com.shinsegae.villiv.common.code.service.CodeService;
import com.shinsegae.villiv.common.upload.dto.BASE64DecodedMultipartFile;
import com.shinsegae.villiv.common.upload.dto.UploadResultDTO;
import com.shinsegae.villiv.common.upload.handler.FileUploadHandler;
import com.shinsegae.villiv.common.utils.VUtil;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.util.List;


/**
 * <%= tableComment %> 관리
 */
@RestController
@RequestMapping(value = "/api/back/${classNameLower}")
@Slf4j
public class ${className}Controller {

    @Autowired
    ${className}Service ${classNameLower}Service;

    @Autowired
    CodeService codeService;

    @Autowired
    FileUploadHandler fileUploadHandler;

    /**
     * <%= tableComment %> 목록 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = "data")
    @AnnoSearchCode(name = "data")
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public APIResult list(
            HttpServletRequest request
            ,@ModelAttribute ${className}SearchCriteria searchCriteria
    ) throws Exception {
        APIResult result = APIResult.fail();

        List<${className}DTO> list = ${classNameLower}Service.select${className}List(searchCriteria);
        int totalCount = ${classNameLower}Service.select${className}ListCount(searchCriteria);
        searchCriteria.setTotalCount(totalCount);

        result.setResultCode(APIResult.APIResultCode.SUCCESS);
        result.put("search", searchCriteria);
        result.put("data", list);
        return result;
    }



    /**
     * <%= tableComment %> 상세 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = "data")
    @AnnoSearchCode(name = "data")
    @RequestMapping(value = "/detail", method = RequestMethod.GET)
    public APIResult detail(
            HttpServletRequest request
            ,@RequestParam String bzCd
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${className}DTO criteria = new ${className}DTO();
        criteria.setBzCd(bzCd);

        ${className}DTO info = ${classNameLower}Service.select${className}(criteria);

        result.setResultCode(APIResult.APIResultCode.SUCCESS);
        result.put("data", info);
        return result;
    }


    /**
     * <%= tableComment %> 추가
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @RequestMapping(value = "/insert", method = RequestMethod.POST)
    public APIResult insert(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.insert${className}(dto);

        result.setResultCode(APIResult.APIResultCode.SUCCESS);
        result.put("data", dto);
        return result;
    }


    /**
     * <%= tableComment %> 수정
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public APIResult update(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.update${className}(dto);

        result.setResultCode(APIResult.APIResultCode.SUCCESS);
        result.put("data", dto);
        return result;
    }



    /**
     * <%= tableComment %> 삭제
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public APIResult delete(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.delete${className}(dto);

        result.setResultCode(APIResult.APIResultCode.SUCCESS);
        return result;
    }



}
