package ${ITEMS.CONTROLLER.packageName};

import com.shinsegae.villiv.common.APIResult;
import com.shinsegae.villiv.common.CmnConst;
import com.shinsegae.villiv.common.CodeEnums;
import com.shinsegae.villiv.common.annotation.AnnoSearchCode;
import com.shinsegae.villiv.common.annotation.AnnoSearchFileEncV2;
import com.shinsegae.villiv.common.annotation.AnnoSetCommon;
import com.shinsegae.villiv.common.annotation.AnnoSetFileUploadV2;
import com.shinsegae.villiv.common.user.AnnoUser;
import com.shinsegae.villiv.common.code.service.CodeService;
import com.shinsegae.villiv.common.upload.dto.BASE64DecodedMultipartFile;
import com.shinsegae.villiv.common.upload.dto.UploadResultDTO;
import com.shinsegae.villiv.common.upload.handler.FileUploadHandler;
import com.shinsegae.villiv.common.utils.VUtil;
import com.shinsegae.villiv.common.user.UserInfo;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.util.List;



/**
 * <%= tableComment %> 관리

 * --------- 설명: ------------------------------
 *      @AnnoSetCommon      // dto 밑 필드내 자식 dto 에 공통값(iptId,iptIp,updId, updIp) 세팅해줌
 *      @AnnoSetFileUploadV2    // file upload 처리
 *      @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)  // file base64 encoding 값 조회해줌
 *      @AnnoSearchCode(name = CmnConst.KEY_DATA)   // 공통코드 조회
 *      @AnnoUser UserInfo userInfo     //사용자 정보(자동으로 값 세팅됨)
 * ---------------------------------------
 */
@RestController
@RequestMapping(value = "/api/back/${classNameLower}")
@Slf4j
public class ${className}Controller {

    @Autowired
    ${className}Service ${classNameLower}Service;

    @Autowired
    CodeService codeService;

    @Autowired
    FileUploadHandler fileUploadHandler;

    <%
        // 부모,자식 관계에서 부모 controller이면 method에 WithSub 붙여줌
        def suffixForMethod = ""
        if(subTableObjectListExist) {
            suffixForMethod = "WithSub"
        }
    %>


    /**
     * <%= tableComment %> 목록 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public APIResult list(
            HttpServletRequest request
            ,@ModelAttribute ${className}SearchCriteria search
    ) throws Exception {
        APIResult result = APIResult.fail();

        List<${className}DTO> list = ${classNameLower}Service.select${className}List${suffixForMethod}(search);
        int totalCount = ${classNameLower}Service.select${className}ListCount(search);
        search.setTotalCount(totalCount);

        result.setResultCodeSucess();
        result.put("search", search);
        result.setData( list);
        return result;
    }


    <%
        /////// common  ///////
        //== a,b,c...
        def selectParamArray = []
        //== String a, Integer b...
        def selectParamAndTypeArray = []
        //== dto.getBzCd(), dto.getSamId() ...
        def selectParamDtoArray = []

        pkFields.eachWithIndex { it,index ->
            selectParamArray.add(it.name)
            selectParamAndTypeArray.add(" ${it.dtoTypeStr} ${it.name}")
            selectParamDtoArray.add( String.format( "  dto.get%s() ", it.name.capitalize() ) )
        }
    %>


    /**
     * <%= tableComment %> 상세 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/detail", method = RequestMethod.GET)
    public APIResult detail(
            HttpServletRequest request
            <%
                pkFields.eachWithIndex { it,index ->
                    def s = String.format( "  ,@RequestParam %s %s ", it.dtoTypeStr, it.name )
                    out.println(s);
                }
            %>
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${className}DTO info = ${classNameLower}Service.select${className}ByPk${suffixForMethod}( ${selectParamArray.join(',')} );

        result.setResultCodeSucess();
        result.setData( info);
        return result;
    }

    /**
     * <%= tableComment %> 추가
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/insert", method = RequestMethod.POST)
    public APIResult insert(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.insert${className}${suffixForMethod}(dto);

        //== select after insert / update
        ${className}DTO selectedInfo = ${classNameLower}Service.select${className}ByPk${suffixForMethod}( ${selectParamDtoArray.join(',')} );

        result.setResultCodeSucess();
        result.setData( selectedInfo);
        return result;
    }


    /**
     * <%= tableComment %> 수정
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public APIResult update(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.update${className}${suffixForMethod}(dto);

        //== select after insert / update
        ${className}DTO selectedInfo = ${classNameLower}Service.select${className}ByPk${suffixForMethod}( ${selectParamDtoArray.join(',')} );

        result.setResultCodeSucess();
        result.setData(selectedInfo);
        return result;
    }



    /**
     * <%= tableComment %> 삭제
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public APIResult delete(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.delete${className}${suffixForMethod}(dto);

        result.setResultCodeSucess();
        return result;
    }


}
