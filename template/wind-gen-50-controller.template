package ${ITEMS.CONTROLLER.packageName};

import com.shinsegae.villiv.common.APIResult;
import com.shinsegae.villiv.common.CmnConst;
import com.shinsegae.villiv.common.CodeEnums;
import com.shinsegae.villiv.common.annotation.AnnoSearchCode;
import com.shinsegae.villiv.common.annotation.AnnoSearchFileEncV2;
import com.shinsegae.villiv.common.annotation.AnnoSetCommon;
import com.shinsegae.villiv.common.annotation.AnnoSetFileUploadV2;
import com.shinsegae.villiv.common.user.AnnoUser;
import com.shinsegae.villiv.common.code.service.CodeService;
import com.shinsegae.villiv.common.upload.dto.BASE64DecodedMultipartFile;
import com.shinsegae.villiv.common.upload.dto.UploadResultDTO;
import com.shinsegae.villiv.common.upload.handler.FileUploadHandler;
import com.shinsegae.villiv.common.utils.VUtil;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.util.List;

<%
    def nonPkFields = fields.findAll { !it.isPk }
    def pkFields = fields.findAll { it.isPk }
    def nonPkNoInsertFields = nonPkFields.findAll { !it.isInsertField }
%>

/**
 * TODO//dev
 * <%= tableComment %> 관리
 */
@RestController
@RequestMapping(value = "/api/back/${classNameLower}")
@Slf4j
public class ${className}Controller {

    @Autowired
    ${className}Service ${classNameLower}Service;

    @Autowired
    CodeService codeService;

    @Autowired
    FileUploadHandler fileUploadHandler;

    /**
     * <%= tableComment %> 목록 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public APIResult list(
            HttpServletRequest request
            ,@ModelAttribute ${className}SearchCriteria search
    ) throws Exception {
        APIResult result = APIResult.fail();

        List<${className}DTO> list = ${classNameLower}Service.select${className}List(search);
        int totalCount = ${classNameLower}Service.select${className}ListCount(search);
        search.setTotalCount(totalCount);

        result.setResultCodeSucess();
        result.put("search", search);
        result.setData( list);
        return result;
    }



    /**
     * <%= tableComment %> 상세 조회
     * @return
     * @throws Exception
     */
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/detail", method = RequestMethod.GET)
    public APIResult detail(
            HttpServletRequest request
            <%
                def selectParamArray = []
                def selectParamAndTypeArray = []
                pkFields.eachWithIndex { it,index ->
                    def s = String.format( "  ,@RequestParam %s %s ", it.dtoTypeStr, it.name )
                    out.println(s);
                    selectParamArray.add(it.name)
                    selectParamAndTypeArray.add(" ${it.dtoTypeStr} ${it.name}")
                }
            %>
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${className}DTO info = select${className}( ${selectParamArray.join(',')} );

        result.setResultCodeSucess();
        result.setData( info);
        return result;
    }

    private ${className}DTO select${className}( ${selectParamAndTypeArray.join(',')} ) {
        ${className}DTO search = new ${className}DTO();
        //search.setBzCd(bzCd);
        // TODO//complete set param: ${selectParamArray.join(',')}

        return ${classNameLower}Service.select${className}(search);
    }


    /**
     * <%= tableComment %> 추가
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/insert", method = RequestMethod.POST)
    public APIResult insert(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.insert${className}(dto);

        //== select after insert / update
        ${className}DTO selectedInfo = select${className}(dto.getBzCd()); // TODO//complete

        result.setResultCodeSucess();
        result.setData( selectedInfo);
        return result;
    }


    /**
     * <%= tableComment %> 수정
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @AnnoSetFileUploadV2
    @AnnoSearchFileEncV2(name = CmnConst.KEY_DATA)
    @AnnoSearchCode(name = CmnConst.KEY_DATA)
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public APIResult update(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.update${className}(dto);

        //== select after insert / update
        ${className}DTO selectedInfo = select${className}(dto.getBzCd()); // TODO//complete

        result.setResultCodeSucess();
        result.setData(selectedInfo);
        return result;
    }



    /**
     * <%= tableComment %> 삭제
     * @return
     * @throws Exception
     */
    @AnnoSetCommon
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public APIResult delete(
            HttpServletRequest request
            ,@RequestBody ${className}DTO dto
            ,@AnnoUser UserInfo userInfo
    ) throws Exception {
        APIResult result = APIResult.fail();

        ${classNameLower}Service.delete${className}(dto);

        result.setResultCodeSucess();
        return result;
    }



}
